import{_ as e,o as i,c as a,e as l}from"./app-23efdb74.js";const o={},r=l('<h2 id="前端存储的方式有哪些" tabindex="-1"><a class="header-anchor" href="#前端存储的方式有哪些" aria-hidden="true">#</a> 前端存储的方式有哪些</h2><ul><li>cookies</li><li>localStorage</li><li>sessionStorage</li><li>web SQL</li><li>indexDB</li></ul><h2 id="强缓存和协商缓存的区别" tabindex="-1"><a class="header-anchor" href="#强缓存和协商缓存的区别" aria-hidden="true">#</a> 强缓存和协商缓存的区别</h2><ul><li>强缓存是在第一次请求时根据服务器返回的响应头,http1.0是expires,http1.1是cach-control，当再次发起请求时，会判断是否到了过期时间，如果没有过期，则直接从缓存中取，否则重新发送请求。</li><li>协商缓存是在第一次发起请求时会返回一个缓存标识，http1.0是Last-Modified,http1.1是etag，当再次请求时会携带这个缓存标识到服务器，服务器判断缓存标识和当前是否一样，如果一样说明资源没有修改，返回304状态码，浏览器拿本地缓存中的数据，否则返回新的资源和新的缓存标识。</li></ul><h2 id="跨域的解决方法" tabindex="-1"><a class="header-anchor" href="#跨域的解决方法" aria-hidden="true">#</a> 跨域的解决方法</h2><ul><li>CORS</li><li>nginx反向代理</li><li>node中间件</li><li>jsonp</li><li>webscoket</li><li>postMessage</li><li>location.hash + iframe</li><li>window.name + iframe</li><li>document.domain + iframe</li></ul><h2 id="哪些操作会造成内存泄漏" tabindex="-1"><a class="header-anchor" href="#哪些操作会造成内存泄漏" aria-hidden="true">#</a> 哪些操作会造成内存泄漏</h2><ul><li>使用未声明的变量</li><li>没有清除定时器</li><li>脱离DOM的引用</li><li>不合理使用闭包</li></ul><h2 id="事件循环机制是什么" tabindex="-1"><a class="header-anchor" href="#事件循环机制是什么" aria-hidden="true">#</a> 事件循环机制是什么</h2><p>js是单线程的语言，单线程意味着所有任务都需要排队执行，前一个执行完才能执行下一个任务，这样就会有问题，如果是一个耗时比较长的异步任务就会阻塞后面代码的执行，因此将任务分为同步任务和异步任务，异步任务又分为微任务和宏任务。 在执行时首先把script整体代码看成宏任务放入主执行栈中执行，遇到同步任务立即执行，遇到宏任务放入宏任务队列，遇到微任务放入微任务队列，执行完后，检查是否存在微任务，依次执行直到清空，然后更新ui渲染，再检查宏任务队列是否有任务，如果有则取第一个任务放入主执行栈中，就这样一次一次的循环。</p><h2 id="宏任务和微任务有哪些" tabindex="-1"><a class="header-anchor" href="#宏任务和微任务有哪些" aria-hidden="true">#</a> 宏任务和微任务有哪些</h2><ul><li>宏任务：setTimeout,setInterval,setImmediate</li><li>微任务：promise,MutationObserver,Process.nextTick</li></ul><h2 id="cookie-localstorage和sessionstorage区别" tabindex="-1"><a class="header-anchor" href="#cookie-localstorage和sessionstorage区别" aria-hidden="true">#</a> cookie，localStorage和sessionStorage区别</h2><ul><li>cookie最多存4K，localStorage和sessionStorage可以存5MB或以上</li><li>cookie会跟随http请求带到服务端，localStorage和sessionStorage只是单纯的存储</li><li>cookie的有效期可以设置，默认是浏览器关闭，sessionStorage是当前会话关闭之后被清除，localStorage除非手动清除，否则一直在</li></ul>',14),t=[r];function s(h,n){return i(),a("div",null,t)}const d=e(o,[["render",s],["__file","browser.html.vue"]]);export{d as default};
