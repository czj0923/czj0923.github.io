import{_ as l,r as c,o as i,c as d,a as s,b as n,d as e,e as t}from"./app-f67704ec.js";const p="/assets/css-1-46820359.png",r="/assets/css-2-fca6ec15.png",u="/assets/css-3-5ca7f1c0.png",h="/assets/css-4-143a2758.png",k={},m=n("h2",{id:"介绍一下盒模型",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#介绍一下盒模型","aria-hidden":"true"},"#"),e(" 介绍一下盒模型")],-1),g=t('<p>盒模型分为 <strong><code>W3C</code> 标准盒模型</strong>和 <strong><code>IE</code> 盒模型</strong>，其区别只有一个：<strong>计算盒子实际大小（即总宽度/总高度）的方式不一样</strong></p><ul><li><code>W3C</code> 标准盒模型（默认） <ul><li><strong>盒子实际宽 = <code>width</code> + <code>padding</code> + <code>border</code></strong></li><li>其中 <strong><code>width</code> 只包含 <code>content</code></strong>（即内容区域的宽度）</li><li><strong>通过 <code>box-sizing: content-box;</code> 来设置为 <code>W3C</code> 标准盒模型</strong></li></ul></li><li>IE 盒模型 <ul><li><strong>盒子实际宽 = <code>width</code></strong></li><li>其中 <strong><code>width</code> = <code>content</code> + <code>border</code> + <code>padding</code></strong></li><li><strong>通过 <code>box-sizing: border-box;</code> 来设置为 <code>IE</code> 盒模型</strong></li></ul></li></ul><table><thead><tr><th>W3C 标准盒模型</th><th>IE 盒模型</th></tr></thead><tbody><tr><td><img src="'+p+'" alt=""></td><td><img src="'+r+'" alt=""></td></tr></tbody></table><h2 id="什么是bfc" tabindex="-1"><a class="header-anchor" href="#什么是bfc" aria-hidden="true">#</a> 什么是BFC?</h2><p>先了解一些前置知识：格式化上下文（Formatting Context）</p>',5),v=n("p",null,"相关资料",-1),b={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Flow_Layout/Intro_to_formatting_contexts",target:"_blank",rel:"noopener noreferrer"},f={href:"https://developer.mozilla.org/zh-CN/docs/orphaned/Web/Guide/CSS/Block_formatting_context",target:"_blank",rel:"noopener noreferrer"},x={href:"https://www.w3.org/TR/CSS2/visuren.html#block-formatting",target:"_blank",rel:"noopener noreferrer"},_=t('<p><code>BFC</code> 即块级格式化上下文（Block Formatting Context），是 <code>Web</code> 页面中一种渲染模式，用于确定块级元素如何排列、定位和与其他元素交互，其相当于一个独立的容器，里面的元素和外部的元素相互不影响</p><h3 id="bfc-的布局规则" tabindex="-1"><a class="header-anchor" href="#bfc-的布局规则" aria-hidden="true">#</a> <code>BFC</code> 的布局规则</h3><ul><li><code>BFC</code> 内部的 <code>Box</code> 会在垂直方向，一个接一个的放置（<strong>不会出现元素重叠</strong>）</li><li><code>BFC</code> 中两个 <code>Box</code> 垂直方向的距离由 <code>margin</code> 决定</li><li><strong>同一个 <code>BFC</code> 中两个相邻 <code>Box</code> 的垂直边距 margin 会发生重叠</strong>，在不同的 <code>BFC</code> 中则不会发生重叠</li><li><code>BFC</code> 中每个子元素的左外边距（<code>margin-left</code>）与容器父元素的左边界相接触（<code>border-left</code>）</li><li><code>BFC</code> 中元素的布局不受外界的影响，也不会影响到外界的元素 <ul><li>形成了 <code>BFC</code> 的区域<strong>不会与浮动元素区域重叠</strong></li><li><strong>计算 <code>BFC</code> 的高度时，浮动元素也会参与计算</strong></li></ul></li></ul><h3 id="bfc-如何创建" tabindex="-1"><a class="header-anchor" href="#bfc-如何创建" aria-hidden="true">#</a> <code>BFC</code> 如何创建</h3><ul><li>根元素（<code>&lt;html&gt;</code>）</li><li>浮动元素：<code>float</code> 不为 <code>none</code></li><li>绝对定位元素：<code>position</code> 为 <code>absolute</code> 或 <code>fixed</code></li><li><code>display</code> 值为如下属性 <ul><li><code>inline-block</code> 行内块元素</li><li><code>flow-root</code> 块级元素盒</li><li><code>table</code> 该行为类似于 <code>&lt;table&gt;</code> 元素</li><li><code>table-cell</code> 该行为类似于 <code>&lt;td&gt;</code> 元素</li><li><code>table-caption</code> 该行为类似于 <code>&lt;caption&gt;</code></li><li><code>table-row</code> 该行为类似于 <code>&lt;tr&gt;</code> 元素</li><li><code>table-row-group</code> 该行为类似于 <code>&lt;tbody&gt;</code> 元素</li><li><code>table-header-group</code> 该行为类似于 <code>&lt;thead&gt;</code> 元素</li><li><code>table-footer-group</code> 该行为类似于 <code>&lt;tfoot&gt;</code> 元素</li><li><code>inline-table</code> 内联表格</li></ul></li><li><code>display</code> 值为 <code>flex</code> <code>inline-flex</code> <code>grid</code> <code>inline-grid</code> 的直接子元素，且它们本身都不是 <code>flex</code>、<code>grid</code>、 <code>table</code> 容器</li><li><code>contain</code> 值为 <code>layout</code>、<code>content</code> 或 <code>paint</code> 的元素</li><li><code>overflow</code> 不为 <code>visible</code> 和 <code>clip</code> 的块元素</li><li>多列容器：<code>column-count</code> 或 <code>column-width</code> 值不为 <code>auto</code></li><li><code>column-span</code> 值为 <code>all</code></li></ul><h3 id="bfc-的应用场景" tabindex="-1"><a class="header-anchor" href="#bfc-的应用场景" aria-hidden="true">#</a> <code>BFC</code> 的应用场景</h3><p>解决了什么问题</p><ul><li>浮动元素高度塌陷</li><li>阻止元素被浮动元素覆盖</li><li>防止 <code>margin</code> 重叠（塌陷）</li><li>自适应布局</li></ul><h3 id="常见的格式化上下文总结" tabindex="-1"><a class="header-anchor" href="#常见的格式化上下文总结" aria-hidden="true">#</a> 常见的格式化上下文总结</h3><ul><li><code>BFC</code>：块级格式化上下文（Block Formatting Context）</li><li><code>IFC</code>：行内格式化上下文（Inline Formatting Context）在 <code>IFC</code> 中元素会沿着基线对齐并按从左到右的顺序排列</li><li><code>TCFC</code>：表格单元格格式化上下文（Table Cell Formatting Context）在 <code>TCFC</code> 中表格的列宽会根据单元格的内容自动调整，而不会出现列宽不一致的情况</li><li><code>FFC</code>：弹性盒子格式化上下文（Flexbox Formatting Context）在 <code>FFC</code> 中弹性盒子元素可以按照自己的尺寸和顺序进行排列。</li><li><code>GFC</code>：网格格式化上下文（Grid Formatting Context）在 <code>GFC</code> 中网格元素可以按照网格的行和列进行排列 <code>FFC</code> 和 <code>GFC</code> 除布局之外规则与 <code>BFC</code> 块格式上下文类似，其容器中不存在浮动子元素，但排除外部浮动和阻止外边距重叠仍然有效</li></ul><h2 id="伪选择器-伪元素和伪类" tabindex="-1"><a class="header-anchor" href="#伪选择器-伪元素和伪类" aria-hidden="true">#</a> 伪选择器（伪元素和伪类）</h2><p>伪选择器包含<strong>伪元素</strong>和<strong>伪类</strong>，其都是添加到一个选择器末尾的关键字</p><h3 id="伪元素" tabindex="-1"><a class="header-anchor" href="#伪元素" aria-hidden="true">#</a> 伪元素</h3><p>伪元素即伪元素选择器，<strong>是通过元素内部创造假的元素</strong>，其不能匹配任何真实存在的 <code>html</code> 元素，使用双冒号（<code>::</code>）语法</p>',14),C=n("h3",{id:"伪类",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#伪类","aria-hidden":"true"},"#"),e(" 伪类")],-1),S=n("strong",null,"表示元素的某种状态",-1),y=n("code",null,":",-1),F={href:"https://book.douban.com/subject/34846688/",target:"_blank",rel:"noopener noreferrer"},z=t(`<h2 id="实现垂直水平居中" tabindex="-1"><a class="header-anchor" href="#实现垂直水平居中" aria-hidden="true">#</a> 实现垂直水平居中</h2><h3 id="text-align-line-height" tabindex="-1"><a class="header-anchor" href="#text-align-line-height" aria-hidden="true">#</a> <code>text-align</code> + <code>line-height</code></h3><p>只能在行内内容在一行时使用（换行了就 GG），同时还需要知道高度的具体值</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.parent</span> <span class="token punctuation">{</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>
  <span class="token comment">/* 行高的值要与 height 一致 */</span>
  <span class="token property">line-height</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>
  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.child</span> <span class="token punctuation">{</span>
  <span class="token comment">/* 如果子元素是块级元素需要改为行内或行内块级才能生效 */</span>
  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>
  <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="absolute-transform" tabindex="-1"><a class="header-anchor" href="#absolute-transform" aria-hidden="true">#</a> <code>absolute + transform</code></h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.parent</span> <span class="token punctuation">{</span>
  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.child</span> <span class="token punctuation">{</span>
  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
  <span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>
  <span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>
  <span class="token property">tansform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-50%<span class="token punctuation">,</span> -50%<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="display-table-cell" tabindex="-1"><a class="header-anchor" href="#display-table-cell" aria-hidden="true">#</a> <code>display: table-cell</code></h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.parent</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> table-cell<span class="token punctuation">;</span>
  <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>
  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flex" tabindex="-1"><a class="header-anchor" href="#flex" aria-hidden="true">#</a> <code>flex</code></h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.parent</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flex-margin" tabindex="-1"><a class="header-anchor" href="#flex-margin" aria-hidden="true">#</a> <code>flex + margin</code></h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.parent</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.child</span> <span class="token punctuation">{</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="grid" tabindex="-1"><a class="header-anchor" href="#grid" aria-hidden="true">#</a> <code>grid</code></h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.parent</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.child</span> <span class="token punctuation">{</span>
  <span class="token property">justify-self</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">align-self</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="grid-margin" tabindex="-1"><a class="header-anchor" href="#grid-margin" aria-hidden="true">#</a> <code>grid + margin</code></h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.parent</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.child</span> <span class="token punctuation">{</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="flex-1-代表什么" tabindex="-1"><a class="header-anchor" href="#flex-1-代表什么" aria-hidden="true">#</a> <code>flex: 1</code> 代表什么？</h2>`,17),w={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex",target:"_blank",rel:"noopener noreferrer"},B=n("code",null,"flex",-1),N=n("code",null,"CSS",-1),W=n("code",null,"Flex",-1),I=n("code",null,"Flex",-1),M=t(`<h3 id="flex-缩写语法规则" tabindex="-1"><a class="header-anchor" href="#flex-缩写语法规则" aria-hidden="true">#</a> <code>flex</code> 缩写语法规则</h3><h3 id="单值语法规则" tabindex="-1"><a class="header-anchor" href="#单值语法规则" aria-hidden="true">#</a> 单值语法规则</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 全局属性值 */</span>
<span class="token comment">/* 初始值 */</span>
<span class="token property">flex</span><span class="token punctuation">:</span> initial<span class="token punctuation">;</span> =&gt; <span class="token property">flex</span><span class="token punctuation">:</span> 0 1 auto
<span class="token comment">/* 从其父级继承 (flex 属性不可被继承，将设置为初始值) */</span>
<span class="token property">flex</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span> =&gt; <span class="token property">flex</span><span class="token punctuation">:</span> 0 1 auto
<span class="token comment">/* 是关键字 initial 和 inherit 的组合(当属性可继承时为 inherit 不可继承时为 initial) */</span>
<span class="token property">flex</span><span class="token punctuation">:</span> unset<span class="token punctuation">;</span> =&gt; <span class="token property">flex</span><span class="token punctuation">:</span> 0 1 auto


<span class="token comment">/* 关键字值 */</span>
<span class="token comment">/* 根据自身的宽度与高度来确定尺寸 弹性 */</span>
<span class="token property">flex</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span> =&gt; <span class="token property">flex</span><span class="token punctuation">:</span> 1 1 auto
<span class="token comment">/* 根据自身宽高来设置尺寸 非弹性 */</span>
<span class="token property">flex</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> =&gt; <span class="token property">flex</span><span class="token punctuation">:</span> 0 0 auto


<span class="token comment">/* 无单位数: flex-grow（标题答案）*/</span>
<span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span> =&gt; 1 1 0
<span class="token property">flex</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span> =&gt; 0 1 0


<span class="token comment">/* 一个有效的 width/height 值: flex-basis */</span>
<span class="token property">flex</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span> =&gt; 1 1 10px
<span class="token property">flex</span><span class="token punctuation">:</span> 20em<span class="token punctuation">;</span> =&gt; 1 1 20em
<span class="token property">flex</span><span class="token punctuation">:</span> min-content<span class="token punctuation">;</span> =&gt; 1 1 min-content
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="双值语法规则" tabindex="-1"><a class="header-anchor" href="#双值语法规则" aria-hidden="true">#</a> 双值语法规则</h3><ol><li><strong>第一个值必须为一个无单位数</strong></li><li>第二个值必须为以下之一 <ol><li><strong>无单位数</strong>：当作 <code>flex-shrink</code> 值</li><li><strong>有效的 <code>width/height</code> 值</strong>：当作 <code>flex-basis</code> 值</li></ol></li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 无单位数: flex-grow | flex-shrink */</span>
<span class="token property">flex</span><span class="token punctuation">:</span> 2 2<span class="token punctuation">;</span> =&gt; 2 2 0

<span class="token comment">/* 有效的 width/height 值: flex-grow | flex-basis */</span>
<span class="token property">flex</span><span class="token punctuation">:</span> 2 30px<span class="token punctuation">;</span> =&gt; 2 1 30px
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="三值语法规则" tabindex="-1"><a class="header-anchor" href="#三值语法规则" aria-hidden="true">#</a> 三值语法规则</h3><ol><li><strong>第一个值必须为一个无单位数</strong>，当作 <code>flex-grow</code> 值</li><li><strong>第二个值必须为一个无单位数</strong>，当作 <code>flex-shrink</code> 值</li><li><strong>第三个值必须为一个有效的 <code>width/height</code> 值</strong>，当作 <code>flex-basis</code> 值</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">flex</span><span class="token punctuation">:</span> 2 2 10%<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,9),E={href:"https://github.com/maomao1996/daily-notes/issues/23",target:"_blank",rel:"noopener noreferrer"},T=n("code",null,"Flex",-1),D=n("h2",{id:"link-和-import-加载样式的区别",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#link-和-import-加载样式的区别","aria-hidden":"true"},"#"),e(),n("code",null,"link"),e(" 和 "),n("code",null,"@import"),e(" 加载样式的区别")],-1),G={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/link",target:"_blank",rel:"noopener noreferrer"},q=n("link",null,null,-1),L=n("code",null,"HTML",-1),O={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/@import",target:"_blank",rel:"noopener noreferrer"},V=n("code",null,"CSS",-1),j=t(`<p>关于 @import 的加载顺序<br> 网上很多文章都说 <code>@import</code> 引入的 <code>CSS</code> 将在页面加载完毕后被加载，其实这个说法是有问题的，比如下面这段代码，我在 <code>style</code> 标签里面使用的 <code>@import</code>，难道还要在页面加载完毕后再去加载</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>关于 @import 的加载顺序<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 在 style 中使用 import 引入 css --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
      <span class="token atrule"><span class="token rule">@import</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>./import.css<span class="token punctuation">)</span></span><span class="token punctuation">;</span></span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 使用 link 引入 css --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./link.css<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    关于 @import 的加载顺序
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后打开浏览器 <code>network</code> 面板去查看具体资源的加载时间</p><p><code>import.css</code> 排队时间 <img src="`+u+'" alt=""><code>link.css</code> 排队时间 <img src="'+h+'" alt=""> 所以 <code>@import</code> 的加载顺序要看其写在哪里，而不能一概而论</p>',4);function H(J,P){const o=c("CustomBlock"),a=c("ExternalLinkIcon");return i(),d("div",null,[m,s(o,{title:"什么是盒模型？",content:"<div>当对一个文档进行布局时，浏览器的渲染引擎会根据标准之一的 <strong><code>CSS</code> 基础框盒模型</strong>（CSS basic box model），将所有元素表示为一个个矩形的盒子；<code>CSS</code> 决定这些盒子的大小、位置以及属性（如颜色、背景、边框尺寸等）</div><div>每个盒子（即盒模型）从外到内由这四个部分组成</div><ul><li><code>margin</code> 外边距（不计入盒子的实际大小）</li><li><code>border</code> 边框</li><li><code>padding</code> 内边距</li><li><code>content</code> 内容</li></ul><div><a href='https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Box_Model/Introduction_to_the_CSS_box_model' target='_blank'>CSS 基础框盒模型介绍 - CSS：层叠样式表 | MDN</a></div>"}),g,s(o,{title:"前置知识：格式化上下文（Formatting Context）",content:"<div>格式化上下文（Formatting Context）即 <code>FC</code>，<strong>是 <code>Web</code> 页面中一种特殊的渲染区域，并有一套渲染规则，它决定了其元素如何排列、定位，以及和其他元素的关系和相互作用</strong></div><div>在 <code>CSS</code> 中，每个元素都属于一个特定的格式化上下文。有一些元素自带格式化上下文，例如根元素（<code>html</code>）、块级元素、浮动元素、绝对定位元素等。其他元素则可以通过一些 <code>CSS</code> 属性来创建自己的格式化上下文，例如 <code>display: inline-block</code>、<code>overflow: hidden</code>、<code>float: left</code> 等。</div>"}),v,n("ul",null,[n("li",null,[n("a",b,[e("Introduction to formatting contexts 格式化上下文简介 - CSS：层叠样式表 | MDN"),s(a)])]),n("li",null,[n("a",f,[e("块格式化上下文 | MDN"),s(a)])]),n("li",null,[n("a",x,[e("Block formatting contexts | W3C CSS2.1"),s(a)])])]),_,s(o,{title:"常用的伪元素选择器",content:"<ul><li><a href='https://developer.mozilla.org/zh-CN/docs/Web/CSS/::before' target='_blank'><code>::before</code></a> 在选定元素的第一个子元素前插入内容</li><li><a href='https://developer.mozilla.org/zh-CN/docs/Web/CSS/::after' target='_blank'><code>::after</code></a> 在选定元素的最后一个子元素后插入内容 <ul><li>都默认为行内元素</li><li>都需要 <a href='https://developer.mozilla.org/zh-CN/docs/Web/CSS/content' target='_blank'><code>content</code></a> 属性配合（用于指定要插入的内容）</li><li>都不能应用在替换元素上， 比如 <code><img /></code> 或 <code><br /></code> 元素</li></ul></li><li><a href='https://developer.mozilla.org/zh-CN/docs/Web/CSS/::first-line' target='_blank'><code>::first-line</code></a> 为块级元素第一行指定样式 <ul><li>只能在块元素中使用（即 <code>display</code> 属性为这些值： <code>block</code>、<code>inline-block</code>、<code>table-cell</code>、<code>list-item</code> 或 <code>table-caption</code>）</li></ul></li><li><a href='https://developer.mozilla.org/zh-CN/docs/Web/CSS/::first-letter' target='_blank'><code>::first-letter</code></a> 为块级元素第一行的第一个字符指定样式 <ul><li>只能在块元素中使用（同 <code>::first-line</code>）</li></ul></li><li><a href='https://developer.mozilla.org/zh-CN/docs/Web/CSS/::selection' target='_blank'><code>::selection</code></a> 为文档中被用户选中或处于高亮状态的部分指定样式 <ul><li>仅这些样式可用：<code>color</code>、<code>background-color</code>、<code>cursor</code>、<code>caret-color</code>、<code>outline</code>、<code>text-decoration</code>、<code>text-emphasis-color</code>、<code>text-shadow</code></li></ul></li><li><a href='https://developer.mozilla.org/zh-CN/docs/Web/CSS/::placeholder' target='_blank'><code>::placeholder</code></a> 为一个表单元素的占位文本指定样式</li></ul>"}),C,n("p",null,[e("伪类即伪类选择器，"),S,e("，使用单冒号（"),y,e("）语法 推荐阅读"),n("a",F,[e("张鑫旭的《CSS 选择器世界》"),s(a)])]),z,n("p",null,[n("a",w,[B,s(a)]),e(" 是一个 "),N,e(" 简写属性，用于设置 "),W,e(" 项目如何增大或缩小以适应其 "),I,e(" 容器中可用的空间")]),s(o,{title:"flex 是 flex-grow flex-shrink flex-basis 属性的简写",content:"<ul><li><a href='https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex-grow' target='_blank'>flex-grow</a> 用于<strong>设置 <code>flex</code> 项目的增长系数</strong><ul><li>负值无效</li><li>初始值为 <code>0</code></li><li>省略时默认值为 <code>1</code></li></ul></li><li><a href='https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex-shrink' target='_blank'>flex-shrink</a> 用于<strong>设置 <code>flex</code> 项目的收缩系数</strong>（仅在默认 <code>width/height</code> 之和大于容器时生效） <ul><li>负值无效</li><li>初始值为 <code>1</code></li><li>省略时默认值为 <code>1</code></li></ul></li><li><a href='https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex-basis' target='_blank'>flex-basis</a> 用于<strong>设置 <code>flex</code> 项目在主轴方向上的初始大小</strong><ul><li>初始值为 <code>auto</code></li><li>省略时默认值为 <code>0</code></li></ul></li></ul>"}),M,n("p",null,[n("a",E,[T,e(" 语法和计算规则"),s(a)])]),D,n("p",null,[n("a",G,[q,s(a)]),e(" 是一个 "),L,e(" 标签，其规定了当前文档与外部资源的关系 "),n("a",O,[e("@import"),s(a)]),e(" 是一个 "),V,e(" 语法规则，用于从其他样式表导入样式规则")]),s(o,{title:"link 和 @import 加载样式的区别",content:"<ul><li>从属关系 <ul><li><code><link></code> 是一个 <code>HTML</code> 标签，只能出现在 <code><head></code> 标签中</li><li><code>@import</code> 是一个 <code>CSS</code> 语法规则，只能在 <code><style></code> 标签和 <code>CSS</code> 文件中使用</li></ul></li><li>应用范围 <ul><li><code><link></code> 标签用于链接各种类型的外部资源（这里只举三个 🌰） <ul><li>加载 <code>CSS</code>：<code><link rel='stylesheet' href='/index.css' /></code></li><li>加载网站图标（<code>favicon</code>）：<code><link rel='icon' href='favicon.ico' /></code></li><li><code>DNS</code> 预解析：<code><link rel='dns-prefetch' href='https://notes.fe-mm.com'></code></li></ul></li><li><code>@import</code> 只能用于引入 <code>CSS</code></li></ul></li><li>加载顺序 <ul><li><code><link></code> 会在浏览器加载页面时同时加载（多个 <code><link></code> 会并行加载）</li><li><code>@import</code> 会在浏览器解析到 <code>CSS</code> 中的 <code>@import</code> 时再加载（多个 <code>@import</code> 会串行加载）</li></ul></li><li><code>DOM</code> 可控性 <ul><li><code><link></code> 可以通过 <code>JavaScript</code> 操作 <code>DOM</code> 进行插入</li><li><code>@import</code> 没有 <code>DOM</code> 接口，无法通过 <code>JavaScript</code> 操作</li></ul></li></ul>"}),j])}const Y=l(k,[["render",H],["__file","css.html.vue"]]);export{Y as default};
