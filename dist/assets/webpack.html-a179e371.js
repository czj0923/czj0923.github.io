import{_ as e,o as l,c as a,e as i}from"./app-2c798668.js";const r={},c=i('<h2 id="webpack常用配置项" tabindex="-1"><a class="header-anchor" href="#webpack常用配置项" aria-hidden="true">#</a> webpack常用配置项</h2><ul><li>entry 入口</li><li>output 出口</li><li>module 配置如何处理模块</li><li>resolve 配置如何寻找文件</li><li>plugins 扩展webpack的功能</li><li>devServer</li></ul><h2 id="使用过webpack里面哪些loader" tabindex="-1"><a class="header-anchor" href="#使用过webpack里面哪些loader" aria-hidden="true">#</a> 使用过webpack里面哪些loader</h2><ul><li>css-loader</li><li>style-loader</li><li>sass-loader</li><li>less-loader</li><li>postcss-loader</li><li>babel-loader</li><li>vue-loader</li></ul><h2 id="使用过webpack里面哪些plugin" tabindex="-1"><a class="header-anchor" href="#使用过webpack里面哪些plugin" aria-hidden="true">#</a> 使用过webpack里面哪些plugin</h2><ul><li>clean-webpack-plugin</li><li>html-webpack-plugin</li><li>copy-webpack-plugin</li></ul><h2 id="plugins和loader有什么区别" tabindex="-1"><a class="header-anchor" href="#plugins和loader有什么区别" aria-hidden="true">#</a> plugins和loader有什么区别</h2><ul><li>webpack只能识别js,loader用于把其他类型的资源转换成webpack能够识别的模块</li><li>plugins用于扩展webpack的功能，在webpack运行时会广播很多事件，plugin可以监听这些事件，然后通过webpack提供的API来改变输出结果。</li></ul><h2 id="模块热更新是什么" tabindex="-1"><a class="header-anchor" href="#模块热更新是什么" aria-hidden="true">#</a> 模块热更新是什么</h2><p>热更新又叫做HMR。这个机制可以做到不用刷新浏览器而将新变更的模块替换掉旧的模块。</p>',10),d=[c];function n(s,p){return l(),a("div",null,d)}const h=e(r,[["render",n],["__file","webpack.html.vue"]]);export{h as default};
